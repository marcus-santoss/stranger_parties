version: "3.7"

services:
  mail:
    image: docker.io/mailhog/mailhog:v1.0.1
    container_name: mail
    hostname: mail
    ports:
      - 8025:8025
    networks:
      - backend

  postgres:
    image: docker.io/library/postgres:12
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "stranger_parties"
      POSTGRES_HOST: "0.0.0.0"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: on-failure
    networks:
      - database


  backend:
    image: docker.io/marcusba/stranger_parties:1.0
    container_name: backend
    hostname: backend
    command: bash binary/wait-for.sh postgres:5432 -t 10 -- bash binary/start_server.sh
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "stranger_parties"
      POSTGRES_HOST: "0.0.0.0"
    ports:
      - 8000:8000
    depends_on:
      - mailhog
      - postgres
    networks:
      - database
      - backend

networks:
  backend: {}
  database: {}
